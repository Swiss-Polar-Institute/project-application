# Generated by Django 3.0.3 on 2020-04-03 10:49

from django.db import migrations, models
import django.db.models.deletion
import grant_management.models
import storages.backends.s3boto3


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('project_core', '0115_historicalproject'),
    ]

    operations = [
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(auto_now=True, help_text='Date and time at which the entry was modified', null=True)),
                ('name', models.TextField(help_text='License name')),
                ('public_text', models.TextField(blank=True, help_text='Explanatory text for this license', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(auto_now=True, help_text='Date and time at which the entry was modified', null=True)),
                ('name', models.TextField(help_text='Please enter social network title')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(auto_now=True, help_text='Date and time at which the entry was modified', null=True)),
                ('doi', models.TextField(blank=True, help_text='DOI reference for entry', null=True)),
                ('reference', models.TextField(blank=True, help_text='Journal reference for entry', null=True)),
                ('title', models.TextField(help_text='Publication title')),
                ('date_published', models.DateField(blank=True, help_text='Date of the publication', null=True)),
                ('project', models.ForeignKey(help_text='Choose related project', on_delete=django.db.models.deletion.PROTECT, to='project_core.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectSocialMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(auto_now=True, help_text='Date and time at which the entry was modified', null=True)),
                ('url', models.TextField(blank=True, help_text='Web address of social media entry', null=True)),
                ('project', models.ForeignKey(help_text='Choose related project', on_delete=django.db.models.deletion.PROTECT, to='project_core.Project')),
                ('social_network', models.ForeignKey(help_text='Choose the related social network', on_delete=django.db.models.deletion.PROTECT, to='grant_management.SocialNetwork')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(auto_now=True, help_text='Date and time at which the entry was modified', null=True)),
                ('due_date', models.DateField(blank=True, help_text='Date that the document was signed', null=True)),
                ('sent_date', models.DateField(help_text='Date that the document was sent')),
                ('reception_date', models.DateField(help_text='Date that the document was received')),
                ('copyright', models.TextField(blank=True, help_text='Owner of copyright', null=True)),
                ('author', models.ForeignKey(help_text='Person who entered this summary', on_delete=django.db.models.deletion.PROTECT, to='project_core.PhysicalPerson')),
                ('license', models.ForeignKey(help_text='Type of license', on_delete=django.db.models.deletion.PROTECT, to='grant_management.License')),
                ('project', models.ForeignKey(help_text='Abstract containing dates', on_delete=django.db.models.deletion.PROTECT, to='project_core.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LaySummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(auto_now=True, help_text='Date and time at which the entry was modified', null=True)),
                ('due_date', models.DateField(blank=True, help_text='Date that the document was signed', null=True)),
                ('sent_date', models.DateField(help_text='Date that the document was sent')),
                ('reception_date', models.DateField(help_text='Date that the document was received')),
                ('text', models.TextField(help_text='Please enter summary here')),
                ('webversion', models.TextField(blank=True, help_text='Please the web version of the summary here', null=True)),
                ('author', models.ForeignKey(help_text='Person who entered this summary', on_delete=django.db.models.deletion.PROTECT, to='project_core.PhysicalPerson')),
                ('project', models.ForeignKey(help_text='Abstract containing dates', on_delete=django.db.models.deletion.PROTECT, to='project_core.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(auto_now=True, help_text='Date and time at which the entry was modified', null=True)),
                ('due_date', models.DateField(blank=True, help_text='Date that the document was signed', null=True)),
                ('sent_date', models.DateField(help_text='Date that the document was sent')),
                ('reception_date', models.DateField(help_text='Date that the document was received')),
                ('file', models.FileField(blank=True, null=True, storage=storages.backends.s3boto3.S3Boto3Storage(), upload_to=grant_management.models.invoice_file_rename)),
                ('paid_date', models.DateField(blank=True, help_text='Date that the invoice was paid', null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, help_text='Total of the invoice', max_digits=20, null=True)),
                ('urls', models.TextField(help_text='Weblink for invoice')),
                ('project', models.ForeignKey(help_text='Abstract containing dates', on_delete=django.db.models.deletion.PROTECT, to='project_core.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GrantAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(auto_now=True, help_text='Date and time at which the entry was modified', null=True)),
                ('signed_date', models.DateField(blank=True, help_text='Date that the grant agreement was signed', null=True)),
                ('file', models.FileField(storage=storages.backends.s3boto3.S3Boto3Storage(), upload_to=grant_management.models.grant_agreement_file_rename)),
                ('project', models.ForeignKey(help_text='Project that this Grant Agreement belongs to', on_delete=django.db.models.deletion.PROTECT, to='project_core.Project')),
                ('signed_by', models.ForeignKey(blank=True, help_text='Person who signed the grant agreement', null=True, on_delete=django.db.models.deletion.PROTECT, to='project_core.PhysicalPerson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FinanceReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(auto_now=True, help_text='Date and time at which the entry was modified', null=True)),
                ('due_date', models.DateField(blank=True, help_text='Date that the document was signed', null=True)),
                ('sent_date', models.DateField(help_text='Date that the document was sent')),
                ('reception_date', models.DateField(help_text='Date that the document was received')),
                ('file', models.FileField(storage=storages.backends.s3boto3.S3Boto3Storage(), upload_to=grant_management.models.finance_report_file_rename)),
                ('sent_for_approval_date', models.DateField(help_text='Date that the finance report was sent for approval')),
                ('project', models.ForeignKey(help_text='Abstract containing dates', on_delete=django.db.models.deletion.PROTECT, to='project_core.Project')),
                ('signed_by', models.ForeignKey(help_text='Person who signed the finance report', on_delete=django.db.models.deletion.PROTECT, to='project_core.PhysicalPerson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(auto_now=True, help_text='Date and time at which the entry was modified', null=True)),
                ('doi', models.TextField(blank=True, help_text='DOI reference for entry', null=True)),
                ('url', models.TextField(blank=True, help_text='Web address for entry', null=True)),
                ('title', models.TextField(help_text='Dataset title')),
                ('date_published', models.DateField(blank=True, help_text='Date of publication', null=True)),
                ('project', models.ForeignKey(help_text='Choose related project', on_delete=django.db.models.deletion.PROTECT, to='project_core.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
