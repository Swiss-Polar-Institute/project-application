# Generated by Django 3.0.3 on 2020-02-19 14:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('project_core', '0104_delete_colour'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(auto_now=True, help_text='Date and time at which the entry was modified', null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(help_text='Title of the project', max_length=500)),
                ('location', models.CharField(blank=True, help_text='Name of more precise location of where the project would take place (not coordinates)', max_length=200, null=True)),
                ('start_date', models.DateField(help_text='Date on which the project is expected to start')),
                ('end_date', models.DateField(help_text='Date on which the project is expected to end')),
                ('duration_months', models.DecimalField(decimal_places=1, help_text='Duration of the project in months', max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('call', models.ForeignKey(help_text='Call to which the project belongs', on_delete=django.db.models.deletion.PROTECT, to='project_core.Call')),
                ('created_by', models.ForeignKey(blank=True, help_text='User by which the entry was created', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project_core_project_created_by_related', to=settings.AUTH_USER_MODEL)),
                ('geographical_areas', models.ManyToManyField(help_text='Geographical area(s) covered by the project', to='project_core.GeographicalArea')),
                ('keywords', models.ManyToManyField(help_text='Keywords that describe the project', to='project_core.Keyword')),
                ('modified_by', models.ForeignKey(blank=True, help_text='User by which the entry was modified', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project_core_project_modified_by_related', to=settings.AUTH_USER_MODEL)),
                ('overarching_project', models.ForeignKey(blank=True, help_text='Overarching project to which this project contributes', null=True, on_delete=django.db.models.deletion.PROTECT, to='project_core.ExternalProject')),
                ('principal_investigator', models.ForeignKey(help_text='Main applicant of the project', on_delete=django.db.models.deletion.PROTECT, to='project_core.PersonPosition')),
                ('proposal', models.ForeignKey(blank=True, help_text='Proposal from which the project originates', null=True, on_delete=django.db.models.deletion.PROTECT, to='project_core.Proposal')),
            ],
            options={
                'unique_together': {('title', 'principal_investigator', 'call')},
            },
        ),
        migrations.CreateModel(
            name='ProjectPartner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_description', models.TextField(help_text="Description of the partner's role")),
                ('competences', models.TextField(help_text="Description of the partner's key competences")),
                ('person', models.ForeignKey(help_text='Person that is a partner', on_delete=django.db.models.deletion.PROTECT, to='project_core.PersonPosition')),
                ('project', models.ForeignKey(help_text='Project on which the partner is collaborating', on_delete=django.db.models.deletion.PROTECT, to='project_core.Project')),
                ('role', models.ForeignKey(help_text='Role of the partner', on_delete=django.db.models.deletion.PROTECT, to='project_core.Role')),
            ],
            options={
                'unique_together': {('person', 'role', 'project')},
            },
        ),
    ]
