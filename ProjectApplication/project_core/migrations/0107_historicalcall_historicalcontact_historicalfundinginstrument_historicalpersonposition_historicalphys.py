# Generated by Django 3.0.3 on 2020-02-27 09:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('project_core', '0106_removes_created_by'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalPhysicalPerson',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(blank=True, editable=False, help_text='Date and time at which the entry was modified', null=True)),
                ('first_name', models.CharField(help_text='First name(s) of a person', max_length=100)),
                ('surname', models.CharField(help_text='Last name(s) of a person', max_length=100)),
                ('phd_date', models.CharField(blank=True, help_text='Date (yyyy-mm) on which PhD awarded or expected', max_length=20, null=True, validators=[django.core.validators.RegexValidator(code='Invalid format', message='Format is yyyy-mm', regex='^[0-9]{4}-[0-9]{2}$')])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('gender', models.ForeignKey(blank=True, db_constraint=False, help_text='Gender with which the person identifies', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='project_core.Gender')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical physical person',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPersonPosition',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(blank=True, editable=False, help_text='Date and time at which the entry was modified', null=True)),
                ('group', models.CharField(blank=True, help_text='Name of the working group, department, laboratory for which the person works', max_length=200, null=True)),
                ('privacy_policy', models.BooleanField(default=False, help_text='Agree or disagree to the data policy for storage of personal information')),
                ('contact_newsletter', models.BooleanField(default=False, help_text='Agree or disagree to being contacted by email with newsletter')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('academic_title', models.ForeignKey(blank=True, db_constraint=False, help_text='Title of the person', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='project_core.PersonTitle')),
                ('career_stage', models.ForeignKey(blank=True, db_constraint=False, help_text='Stage of the person in the career', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='project_core.CareerStage')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('person', models.ForeignKey(blank=True, db_constraint=False, help_text='A unique physical person', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='project_core.PhysicalPerson')),
            ],
            options={
                'verbose_name': 'historical person position',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFundingInstrument',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(blank=True, editable=False, help_text='Date and time at which the entry was modified', null=True)),
                ('long_name', models.CharField(db_index=True, help_text='Full name of funding instrument', max_length=200)),
                ('short_name', models.CharField(blank=True, help_text='Short name or acronym of the funding instrument', max_length=60, null=True)),
                ('description', models.TextField(help_text='Description of the funding instrument that can be used to distinguish it from others')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical funding instrument',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalContact',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(blank=True, editable=False, help_text='Date and time at which the entry was modified', null=True)),
                ('entry', models.CharField(help_text='Text of contact entry, such as phone number, pager etc.', max_length=100)),
                ('method', models.CharField(choices=[('Office', 'Office'), ('Mobile', 'Mobile'), ('Email', 'Email')], help_text='Type of contact method', max_length=30)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('person_position', models.ForeignKey(blank=True, db_constraint=False, help_text='Person to whom the contact details belong', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='project_core.PersonPosition')),
            ],
            options={
                'verbose_name': 'historical contact',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCall',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False, help_text='Date and time at which the entry was created')),
                ('modified_on', models.DateTimeField(blank=True, editable=False, help_text='Date and time at which the entry was modified', null=True)),
                ('long_name', models.CharField(db_index=True, help_text='Full name of the call', max_length=200)),
                ('short_name', models.CharField(blank=True, help_text='Short name or acronym of the call', max_length=60, null=True)),
                ('description', models.TextField(help_text='Description of the call that can be used to distinguish it from others')),
                ('introductory_message', models.TextField(blank=True, help_text='Introductory text to the call for applicants', null=True)),
                ('call_open_date', models.DateTimeField(help_text='Date on which the call is opened')),
                ('submission_deadline', models.DateTimeField(help_text='Submission deadline of the call')),
                ('budget_maximum', models.DecimalField(decimal_places=2, help_text='Maximum amount that can be requested in the proposal budget', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('other_funding_question', models.BooleanField(help_text='True if the Other Funding question is enabled')),
                ('proposal_partner_question', models.BooleanField(help_text='True if the Proposal Partner question is enabled')),
                ('overarching_project_question', models.BooleanField(default=False, help_text='True if the question for the overarching project is displayed')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('funding_instrument', models.ForeignKey(blank=True, db_constraint=False, help_text='Funding instrument to which the call belongs', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='project_core.FundingInstrument')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical call',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
